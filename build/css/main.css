/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,700);
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

a {
  background-color: transparent; }

a:active, a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: 700; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -.5em; }

sub {
  bottom: -.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code, kbd, pre, samp {
  font-family: monospace,monospace;
  font-size: 1em; }

button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button, select {
  text-transform: none; }

button, html input[type=button], input[type=reset], input[type=submit] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type=checkbox], input[type=radio] {
  box-sizing: border-box;
  padding: 0; }

input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
  height: auto; }

input[type=search] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid silver;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: 700; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

button, input[type="button"], input[type="reset"], input[type="submit"],
button {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  -webkit-font-smoothing: antialiased;
  background-color: #477dca;
  border-radius: 3px;
  border: none;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1em;
  font-weight: 600;
  line-height: 1;
  padding: 0.75em 1em;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus,
  button:hover,
  button:focus {
    background-color: #2c5999;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled,
  button:disabled {
    cursor: not-allowed;
    opacity: 0.5; }

fieldset {
  background-color: #f7f7f7;
  border: 1px solid #ddd;
  margin: 0 0 0.75em;
  padding: 1.5em; }

input,
label,
select {
  display: block;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1em; }

label {
  font-weight: 600;
  margin-bottom: 0.375em; }
  label.required::after {
    content: "*"; }
  label abbr {
    display: none; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], textarea,
select[multiple=multiple],
textarea {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1em;
  margin-bottom: 0.75em;
  padding: 0.5em;
  transition: border-color;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, textarea:hover,
  select[multiple=multiple]:hover,
  textarea:hover {
    border-color: #c4c4c4; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, textarea:focus,
  select[multiple=multiple]:focus,
  textarea:focus {
    border-color: #477dca;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(55, 112, 192, 0.7);
    outline: none; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.375em; }

input[type="file"] {
  padding-bottom: 0.75em;
  width: 100%; }

select {
  margin-bottom: 1.5em;
  max-width: 100%;
  width: auto; }

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0; }
dl {
  margin-bottom: 0.75em; }
  dl dt {
    font-weight: bold;
    margin-top: 0.75em; }
  dl dd {
    margin: 0; }

table {
  -webkit-font-feature-settings: "kern", "liga", "tnum";
  -ms-font-feature-settings: "kern", "liga", "tnum";
  font-feature-settings: "kern", "liga", "tnum";
  border-collapse: collapse;
  margin: 0.75em 0;
  table-layout: fixed;
  width: 100%; }

th {
  border-bottom: 1px solid #b7b7b7;
  font-weight: 600;
  padding: 0.75em 0;
  text-align: left; }

td {
  border-bottom: 1px solid #ddd;
  padding: 0.75em 0; }

tr,
td,
th {
  vertical-align: middle; }

body {
  -webkit-font-feature-settings: "kern", "liga", "pnum";
  -ms-font-feature-settings: "kern", "liga", "pnum";
  font-feature-settings: "kern", "liga", "pnum";
  -webkit-font-smoothing: antialiased;
  color: #333;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1em;
  line-height: 1.5; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1em;
  line-height: 1.2;
  margin: 0 0 0.75em; }

p {
  margin: 0 0 0.75em; }

a {
  color: #477dca;
  text-decoration: none;
  transition: color 0.1s linear; }
  a:active, a:focus, a:hover {
    color: #2c5999; }
  a:active, a:focus {
    outline: none; }

hr {
  border-bottom: 1px solid #ddd;
  border-left: none;
  border-right: none;
  border-top: none;
  margin: 1.5em 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

#map_canvas {
  height: 400px;
  width: 100%; }

#map_canvas img {
  max-width: none; }

#map_canvas .content {
  padding: 0 0.5em 1em 0.5em; }

#map_canvas .firstHeading {
  font-size: 1em;
  line-height: 1em;
  font-weight: bold;
  margin: 0; }

#map_canvas #bodyContent p {
  font-size: 1em;
  margin: 0; }

.texture {
  height: 5em;
  width: 100%; }
  .texture .texture-normal {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/diagonal-noise.png"), linear-gradient(180deg, #e1f2f1, #bae0de), center no-repeat #e1f2f1 scroll;
    float: left;
    height: 5em;
    width: 50%; }
  .texture .texture-inverted {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/inverted/diagonal-noise.png"), linear-gradient(180deg, #e1f2f1, #bae0de), center no-repeat #e1f2f1 scroll;
    float: left;
    height: 5em;
    width: 50%; }

* {
  font-family: 'Open Sans', sans-serif; }

html {
  font-size: 0.8vw;
  min-height: 100%; }

body {
  min-height: 100%; }

main {
  float: left;
  font-size: 1.5rem;
  padding: 0;
  position: relative;
  display: table; }
  main .content {
    background-color: #d7d7d7;
    background-image: linear-gradient(to right,#d7d7d7 0%, #fff 3%, #fff 97%, #d7d7d7 100%);
    position: relative;
    float: left;
    width: 100%;
    padding: 5rem 5rem 0 5rem;
    text-align: justify; }
    main .content p {
      padding-left: 2rem; }
    main .content h1 {
      font-size: 2.5rem; }
    main .content h2 {
      width: 30rem;
      display: block;
      font-size: 2rem;
      background-color: #ffd466;
      background-image: linear-gradient(to right,#ffd466, rgba(255, 184, 0, 0));
      background-color: white;
      padding: 0.2rem 1rem;
      border-radius: 1rem; }
    main .content aside {
      float: right;
      width: 36rem;
      padding: 2rem; }
      main .content aside img {
        width: 100%;
        height: auto; }
      main .content aside p {
        padding: 0 1rem;
        margin: 0;
        font-size: 1.3rem;
        text-align: center;
        font-weight: bold; }

.hero {
  display: block;
  position: relative;
  float: left;
  box-shadow: 0 0.2rem 1rem 0.5rem #334;
  line-height: 0;
  z-index: 5; }

.banner {
  position: relative;
  width: 100%;
  height: auto; }

.iso {
  position: absolute;
  right: 1rem;
  bottom: 1rem;
  width: 20rem;
  height: auto;
  z-index: 30;
  padding: 0;
  margin: 0; }

.bannertext {
  position: absolute;
  top: 7%;
  right: 2%;
  font-size: 3.5rem;
  font-weight: Bold;
  text-shadow: rgba(0, 0, 0, 0.5) 1px 2px;
  color: #e8e5e3;
  z-index: 10; }

.topbar {
  position: relative;
  top: 0;
  float: right;
  width: 70%;
  display: table;
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/fancy_deboss.png"), linear-gradient(180deg, #222, #111), center no-repeat #222 scroll;
  color: #f2f1dc;
  font-size: 1.3rem;
  font-weight: bold;
  padding: 0.5rem 1rem 0 1rem;
  text-align: right;
  border-top: 0.3rem solid #ffb800;
  border-left: 1px solid #646464;
  border-bottom: 1px solid #646464;
  border-radius: 0 0 0 1rem;
  box-shadow: inset 2px -2px 1px 0 rgba(200, 200, 200, 0.6); }
  .topbar p {
    display: inline-block;
    line-height: 2rem;
    vertical-align: bottom; }
  .topbar .in {
    margin-left: 2rem;
    display: inline-table; }
    .topbar .in a {
      display: table-cell;
      line-height: 0; }
      .topbar .in a img {
        height: 2.8rem;
        width: 2.8rem;
        padding: 0.1rem; }
      .topbar .in a:hover {
        background-image: radial-gradient( circle, #ffb800 0%, #ffb800 20%, transparent 90%); }

header {
  position: relative;
  float: left;
  width: 100%;
  margin: 0;
  padding: 0;
  height: 12rem;
  display: table;
  border-bottom: 0.1rem solid #222;
  box-shadow: 0 0.2rem 0.5rem 0.3rem #333;
  z-index: 20;
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/diagonal-noise.png"), linear-gradient(180deg, #777, #222), center no-repeat #777 scroll; }
  header .logo {
    display: inline-block;
    position: relative;
    top: 2rem;
    left: 1rem;
    float: left;
    height: 7rem;
    width: auto;
    padding: 0.5rem 1rem 0.4rem 1rem;
    box-sizing: padding-box;
    transition: all 0.5s ease-in-out; }
    header .logo:hover {
      -webkit-transform: scale(1.05);
      transform: scale(1.05); }
  header nav {
    position: relative;
    float: right;
    display: table;
    height: 5rem; }
    header nav ul {
      margin: 0 1rem; }
      header nav ul li {
        display: inline-block;
        padding: 0;
        margin: 0;
        vertical-align: top; }
      header nav ul li a {
        transition: all 0.5s ease-in-out;
        display: table;
        height: 100%;
        border-top: 0.7rem solid transparent;
        border-radius: 0 0 0.3rem 0.3rem;
        box-sizing: border-box;
        font-size: 1.8rem;
        color: #eeebda;
        text-decoration: none;
        font-weight: bold;
        padding: 1rem 0.5rem 0 1rem; }
        header nav ul li a:hover {
          color: #fffee6;
          text-decoration: underline; }
        header nav ul li a:focus {
          background: rgba(50, 50, 50, 0.3);
          border-color: #ffb800;
          color: #fffee6;
          padding-top: 2rem;
          padding-bottom: 1rem; }

.ubicacion {
  display: table;
  width: 100%; }
  .ubicacion h3, .ubicacion h4 {
    padding-left: 2rem; }
  .ubicacion h3 {
    font-size: 2rem; }

#map_canvas {
  margin-bottom: 3rem;
  display: inline-block;
  width: 55rem;
  float: right; }

.half {
  float: left;
  width: 55rem;
  display: inline-block; }

.carousel {
  position: relative;
  float: left;
  top: 10rem;
  display: table;
  width: 100%;
  height: 6rem;
  padding: 1rem 1rem;
  margin-bottom: 2rem; }
  .carousel img {
    position: absolute;
    right: 0;
    display: none;
    float: left;
    width: auto;
    height: 5rem; }

.productos {
  position: relative;
  display: table;
  float: left;
  width: 100%;
  min-height: 45rem; }

.bigcable {
  position: absolute;
  display: block;
  bottom: 0;
  z-index: 20;
  width: 100%; }

footer {
  display: table;
  position: relative;
  height: 20rem;
  width: 100%;
  border-top: 0.5rem solid #AAA;
  box-shadow: 0 0 5px 1px rgba(50, 50, 50, 0.8);
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/diagonal-noise.png"), linear-gradient(180deg, #777, #222), center no-repeat #777 scroll;
  z-index: 99;
  padding-top: 3rem;
  color: #fffee6;
  font-size: 1.5rem; }
  footer h2 {
    font-size: 2rem;
    text-align: center; }
  footer .informacion {
    text-align: right;
    position: relative;
    float: left;
    width: 55rem;
    display: block;
    padding-left: 3rem;
    padding-bottom: 5rem; }
    footer .informacion strong {
      float: left; }
    footer .informacion p:first-of-type {
      padding-top: 2.3rem; }
    footer .informacion p:last-of-type {
      padding-bottom: 2rem; }
  footer .formulario {
    padding-right: 3rem;
    position: relative;
    display: block;
    float: right;
    width: 55rem; }
  footer form textarea {
    background: rgba(50, 50, 50, 0.5);
    color: #fffee6;
    resize: none; }
  footer form button {
    transition: all 0.5s ease-in-out;
    display: block;
    background: #cc9300; }
    footer form button:hover {
      background: #e6a600; }
  footer form .field {
    display: block;
    margin: 0 0 0.5rem 0;
    position: relative; }
    footer form .field:last-of-type {
      padding-bottom: 3rem; }
    footer form .field input {
      color: #FFF9DF;
      display: block;
      font-size: 1.5rem;
      outline: none;
      border: 1px solid #999;
      padding: 0.7rem;
      background: transparent;
      border-radius: 0.3rem; }
  footer form .field span {
    position: relative;
    top: 2.7rem;
    left: 0.7rem;
    z-index: -1; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwibWFpbi5zY3NzIiwicmVzZXRzL19ub3JtYWxpemUuc2NzcyIsIm5lYXQvZ3JpZC9fYm94LXNpemluZy5zY3NzIiwiYmFzZS9fYnV0dG9ucy5zY3NzIiwiYm91cmJvbi9hZGRvbnMvX3ByZWZpeGVyLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsImJhc2UvX2Zvcm1zLnNjc3MiLCJiYXNlL19saXN0cy5zY3NzIiwiYmFzZS9fdGFibGVzLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJtYXAvX21hcC5zY3NzIiwidGV4dHVyZXMvX3RleHR1cmVzLnNjc3MiLCJib3VyYm9uL2NzczMvX2JhY2tncm91bmQuc2NzcyIsImJvdXJib24vY3NzMy9fbGluZWFyLWdyYWRpZW50LnNjc3MiLCJib3VyYm9uL2NzczMvX3JhZGlhbC1ncmFkaWVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE0RDtBQ0lwRCx1RUFBNkQ7QUNKVDtFQUFLLHlCQUFzQjtFQUFDLDRCQUF5QjtFQUFDLGdDQUE2QixFQUFBOztBQUFDO0VBQUssV0FBUSxFQUFBOztBQUFDO0VBQTJGLGdCQUFhLEVBQUE7O0FBQUM7RUFBNEIsdUJBQW9CO0VBQUMsMEJBQXVCLEVBQUE7O0FBQUM7RUFBc0IsZUFBWTtFQUFDLFdBQVEsRUFBQTs7QUFBQztFQUFrQixlQUFZLEVBQUE7O0FBQUM7RUFBRSwrQkFBNEIsRUFBQTs7QUFBQztFQUFpQixZQUFTLEVBQUE7O0FBQUM7RUFBWSwyQkFBd0IsRUFBQTs7QUFBQztFQUFTLGtCQUFlLEVBQUE7O0FBQUM7RUFBSSxvQkFBaUIsRUFBQTs7QUFBQztFQUFHLGdCQUFhO0VBQUMsaUJBQWMsRUFBQTs7QUFBQztFQUFLLGtCQUFlO0VBQUMsYUFBVSxFQUFBOztBQUFDO0VBQU0sZ0JBQWEsRUFBQTs7QUFBQztFQUFRLGdCQUFhO0VBQUMsZ0JBQWE7RUFBQyxvQkFBaUI7RUFBQywwQkFBdUIsRUFBQTs7QUFBQztFQUFJLFlBQVMsRUFBQTs7QUFBQztFQUFJLGdCQUFhLEVBQUE7O0FBQUM7RUFBSSxXQUFRLEVBQUE7O0FBQUM7RUFBZSxrQkFBZSxFQUFBOztBQUFDO0VBQU8sa0JBQWUsRUFBQTs7QUFBQztFQUErQix5QkFBc0I7RUFBQyxXQUFRLEVBQUE7O0FBQUM7RUFBSSxnQkFBYSxFQUFBOztBQUFDO0VBQWtCLGtDQUErQjtFQUFDLGdCQUFhLEVBQUE7O0FBQUM7RUFBc0MsZ0JBQWE7RUFBQyxlQUFZO0VBQUMsV0FBUSxFQUFBOztBQUFDO0VBQU8sbUJBQWdCLEVBQUE7O0FBQUM7RUFBYyxzQkFBbUIsRUFBQTs7QUFBQztFQUFvRSw0QkFBeUI7RUFBQyxpQkFBYyxFQUFBOztBQUFDO0VBQXNDLGlCQUFjLEVBQUE7O0FBQUM7RUFBaUQsV0FBUTtFQUFDLFlBQVMsRUFBQTs7QUFBQztFQUFNLHFCQUFrQixFQUFBOztBQUFDO0VBQXVDLHdCQUFxQjtFQUFDLFlBQVMsRUFBQTs7QUFBQztFQUE0RixjQUFXLEVBQUE7O0FBQUM7RUFBbUIsK0JBQTRCO0VBQTRELHlCQUFzQixFQUFBOztBQUFDO0VBQStGLDBCQUF1QixFQUFBOztBQUFDO0VBQVMsMEJBQXVCO0VBQUMsZUFBWTtFQUFDLDZCQUEwQixFQUFBOztBQUFDO0VBQU8sV0FBUTtFQUFDLFlBQVMsRUFBQTs7QUFBQztFQUFTLGdCQUFhLEVBQUE7O0FBQUM7RUFBUyxrQkFBZSxFQUFBOztBQUFDO0VBQU0sMkJBQXdCO0VBQUMsbUJBQWdCLEVBQUE7O0FBQUM7RUFBTSxZQUFTLEVBQUE7O0FDRzE3RDtFQUNFLHdCQUFzQixFQUFBOztBQUl0QjtFQUdFLHFCQUFtQixFQUFBOztBQ1h6Qjs7RUNtQ1EsMEJEakNrQjtFQ3FDbEIsdUJEckNrQjtFQ3lDbEIsc0JEekNrQjtFQzZDbEIscUJEN0NrQjtFQ2lEbEIsa0JEakRrQjtFQUN4QixxQ0FBbUM7RUFDbkMsMkJFc0JrQjtFRnJCbEIsb0JFT3NCO0VGTnRCLGNBQVk7RUFDWixhQUFXO0VBQ1gsaUJBQWU7RUFDZix1QkFBcUI7RUFDckIsMkVFUnFDO0VGU3JDLGdCRU5rQjtFRk9sQixrQkFBZ0I7RUFDaEIsZ0JBQWM7RUFDZCxxQkFBbUI7RUFDbkIsdUJBQXFCO0VBQ3JCLDJCQUFpQjtLQUFqQix3QkFBaUI7TUFBakIsdUJBQWlCO1VBQWpCLG1CQUFpQjtFQUNqQix3QkFBc0I7RUFDdEIscUJBQW1CLEVBQUE7RUFFbkI7OztJQUVFLDJCQUE0QztJQUM1QyxhQUFXLEVBQUE7RUFHYjs7SUFDRSxxQkFBbUI7SUFDbkIsY0FBWSxFQUFBOztBRzVCaEI7RUFDRSwyQkFBa0Q7RUFDbEQsd0JENEJ3QztFQzNCeEMsb0JBQTBCO0VBQzFCLGdCRFNvQyxFQUFBOztBQ050Qzs7O0VBR0UsZ0JBQWM7RUFDZCwyRURUcUM7RUNVckMsZ0JEUGtCLEVBQUE7O0FDVXBCO0VBQ0Usa0JBQWdCO0VBQ2hCLHdCQUFpQyxFQUFBO0VBRWpDO0lBQ0UsY0FBWSxFQUFBO0VBR2Q7SUFDRSxlQUFhLEVBQUE7O0FBSWpCOzs7RUFHRSx3QkRQMEI7RUNRMUIsd0JERndDO0VDR3hDLG9CRHJCc0I7RUNzQnRCLGlERERnRDtFQ0VoRCx3QkFBc0I7RUFDdEIsMkVEbENxQztFQ21DckMsZ0JEaENrQjtFQ2lDbEIsdUJBQWdDO0VBQ2hDLGdCQUEwQjtFQUMxQiwwQkFBd0I7RUFDeEIsYUFBVyxFQUFBO0VBRVg7OztJQUNFLHVCQUE2QyxFQUFBO0VBRy9DOzs7SUFDRSx1QkR0QmdCO0lDdUJoQixrRkRmb0M7SUNnQnBDLGVBQWEsRUFBQTs7QUFJakI7RUFDRSxrQkFBZ0IsRUFBQTs7QUFHbEI7RUZ2QlEsMEJFd0JrQjtFRnBCbEIsdUJFb0JrQjtFRmhCbEIsc0JFZ0JrQjtFRlpsQixxQkVZa0I7RUZSbEIsa0JFUWtCLEVBQUE7O0FBRzFCOztFQUVFLGlCQUFlO0VBQ2YsdUJBQWdDLEVBQUE7O0FBR2xDO0VBQ0Usd0JEdkQrQjtFQ3dEL0IsYUFBVyxFQUFBOztBQUdiO0VBQ0Usc0JEN0RvQztFQzhEcEMsaUJBQWU7RUFDZixhQUFXLEVBQUE7O0FDNUViOztFQUVFLHVCQUFxQjtFQUNyQixXQUFTO0VBQ1QsWUFBVSxFQUFBO0FBZVo7RUFDRSx1QkZOK0IsRUFBQTtFRVEvQjtJQUNFLG1CQUFpQjtJQUNqQixvQkZWNkIsRUFBQTtFRWEvQjtJQUNFLFdBQVMsRUFBQTs7QUM1QmI7RUptQ1EsdURBQTRCO0VBUTVCLG1EQUF3QjtFQVF4QiwrQ0FBb0I7RUlqRDFCLDJCQUF5QjtFQUN6QixrQkFBd0I7RUFDeEIscUJBQW1CO0VBQ25CLGFBQVcsRUFBQTs7QUFHYjtFQUNFLGtDQUF3RDtFQUN4RCxrQkFBZ0I7RUFDaEIsbUJBQXlCO0VBQ3pCLGtCQUFnQixFQUFBOztBQUdsQjtFQUNFLCtCSGN3QztFR2J4QyxtQkFBeUIsRUFBQTs7QUFHM0I7OztFQUdFLHdCQUFzQixFQUFBOztBQ3ZCeEI7RUxtQ1EsdURBQTRCO0VBUTVCLG1EQUF3QjtFQVF4QiwrQ0FBb0I7RUtqRDFCLHFDQUFtQztFQUNuQyxhSnNCMEI7RUlyQjFCLDJFSkZxQztFSUdyQyxnQkpBa0I7RUlDbEIsa0JKRW9CLEVBQUE7O0FJQ3RCOzs7Ozs7RUFNRSwyRUpicUM7RUljckMsZ0JKWGtCO0VJWWxCLGtCSlJ1QjtFSVN2QixvQkFBMEIsRUFBQTs7QUFHNUI7RUFDRSxvQkFBMEIsRUFBQTs7QUFHNUI7RUFDRSxnQkpBa0I7RUlDbEIsdUJBQXFCO0VBQ3JCLCtCQUE2QixFQUFBO0VBRTdCO0lBR0UsZ0JBQWlDLEVBQUE7RUFHbkM7SUFFRSxlQUFhLEVBQUE7O0FBSWpCO0VBQ0UsK0JKYndDO0VJY3hDLG1CQUFpQjtFQUNqQixvQkFBa0I7RUFDbEIsa0JBQWdCO0VBQ2hCLGlCQUF1QixFQUFBOztBQUd6Qjs7RUFFRSxXQUFTO0VBQ1QsaUJBQWUsRUFBQTs7QUNyRGpCO0VBQ0UsZUFBYTtFQUNiLGFBQVcsRUFBQTs7QUFHYjtFQUNFLGlCQUFlLEVBQUE7O0FBSWpCO0VBQ0UsNEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsZ0JBQWM7RUFDZCxrQkFBZ0I7RUFDaEIsbUJBQWlCO0VBQ2pCLFdBQVMsRUFBQTs7QUFHWDtFQUNFLGdCQUFjO0VBQ2QsV0FBUyxFQUFBOztBQzhFWDtFQUdFLGFBQVc7RUFDWCxhQUFXLEVBQUE7RUFFWDtJQ3REQSxzTUFKNkU7SUQ2RDNFLGFBQVc7SUFDWCxhQUFXO0lBQ1gsWUFBVSxFQUFBO0VBR1o7SUM5REEsK01BSjZFO0lEcUUzRSxhQUFXO0lBQ1gsYUFBVztJQUNYLFlBQVUsRUFBQTs7QVhoSGQ7RUFDRSxzQ0FBb0MsRUFBQTs7QUFHdEM7RUFDRSxrQkFBZ0I7RUFDaEIsa0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0Usa0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsYUFBVztFQUNYLG1CQUFpQjtFQUNqQixZQUFVO0VBQ1Ysb0JBQWtCO0VBQ2xCLGdCQUFjLEVBQUE7RUFDZDtJYU9BLDJCQVA0QjtJQVM1Qix5RkFBa0U7SWJQaEUsb0JBQWtCO0lBQ2xCLGFBQVc7SUFDWCxhQUFXO0lBQ1gsMkJBQXlCO0lBQ3pCLHFCQUFtQixFQUFBO0lBQ25CO01BQ0Usb0JBQWtCLEVBQUE7SUFFcEI7TUFDRSxtQkFBaUIsRUFBQTtJQUVuQjtNQUNFLGNBQVk7TUFDWixnQkFBYztNQUNkLGlCQUFlO01hVG5CLDJCQVA0QjtNQVM1QiwyRUFBa0U7TWJTOUQseUJBQXVCO01BQ3ZCLHNCQUFvQjtNQUNwQixxQkFBbUIsRUFBQTtJQUVyQjtNQUNFLGNBQVk7TUFDWixjQUFZO01BQ1osZUFBYSxFQUFBO01BQ2I7UUFDRSxhQUFXO1FBQ1gsY0FBWSxFQUFBO01BRWQ7UUFDRSxpQkFBZTtRQUNmLFdBQVM7UUFDVCxtQkFBaUI7UUFDakIsb0JBQWtCO1FBQ2xCLG1CQUFpQixFQUFBOztBQU96QjtFQUNFLGdCQUFjO0VBQ2Qsb0JBQWtCO0VBQ2xCLGFBQVc7RUFDWCx1Q0FBcUM7RUFDckMsZ0JBQWM7RUFDZCxZQUFVLEVBQUE7O0FBR1o7RUFDRSxvQkFBa0I7RUFDbEIsYUFBVztFQUNYLGNBQVksRUFBQTs7QUFHZDtFQUNFLG9CQUFrQjtFQUNsQixhQUFXO0VBQ1gsY0FBWTtFQUNaLGNBQVk7RUFDWixjQUFZO0VBQ1osYUFBVztFQUNYLFlBQVU7RUFDVixXQUFTLEVBQUE7O0FBR1g7RUFDRSxvQkFBa0I7RUFDbEIsU0FBTztFQUNQLFdBQVM7RUFDVCxtQkFBaUI7RUFDakIsbUJBQWlCO0VBQ2pCLHlDQUF1QztFQUN2QyxnQkFBMEI7RUFDMUIsYUFBVyxFQUFBOztBQUdiO0VBQ0Usb0JBQWtCO0VBQ2xCLFFBQU07RUFDTixjQUFZO0VBQ1osWUFBVTtFQUNWLGdCQUFjO0VZMURkLDJMQUo2RTtFWmdFN0UsZ0JBQWM7RUFDZCxtQkFBaUI7RUFDakIsbUJBQWlCO0VBQ2pCLDZCQUEyQjtFQUMzQixtQkFBaUI7RUFDakIsa0NBQWdDO0VBQ2hDLGdDQUE2QztFQUM3QyxrQ0FBK0M7RUFDL0MsMkJBQXlCO0VBQ3pCLDJEQUF5RCxFQUFBO0VBQ3pEO0lBQ0UsdUJBQXFCO0lBQ3JCLG1CQUFpQjtJQUNqQix3QkFBc0IsRUFBQTtFQUV4QjtJQUNFLG1CQUFpQjtJQUNqQix1QkFBcUIsRUFBQTtJQUNyQjtNQUNFLHFCQUFtQjtNQUNuQixnQkFBYyxFQUFBO01BQ2Q7UUFDRSxnQkFBYztRQUNkLGVBQWE7UUFDYixpQkFBZSxFQUFBO01BRWpCO1FjdEdKLHNGQUFxRixFQUFBOztBZDhHdkY7RUFDRSxvQkFBa0I7RUFDbEIsYUFBVztFQUNYLGFBQVc7RUFDWCxXQUFTO0VBQ1QsWUFBVTtFQUNWLGVBQWE7RUFDYixnQkFBYztFQUNkLGtDQUFnQztFQUNoQyx5Q0FBdUM7RUFDdkMsYUFBVztFWXhHWCw2TEFKNkUsRUFBQTtFWitHN0U7SUFDRSx1QkFBcUI7SUFDckIsb0JBQWtCO0lBQ2xCLFdBQVM7SUFDVCxZQUFVO0lBQ1YsYUFBVztJQUNYLGNBQVk7SUFDWixhQUFXO0lBQ1gsa0NBQWdDO0lBQ2hDLHlCQUF1QjtJSXRIbkIsa0NBQW9CLEVBQUE7SUp5SHhCO01JeklJLGdDQUE0QjtNQWdCNUIsd0JBQW9CLEVBQUE7RUo2SDFCO0lBQ0Usb0JBQWtCO0lBQ2xCLGNBQVk7SUFDWixnQkFBYztJQUNkLGNBQVksRUFBQTtJQUNaO01BQ0UsZ0JBQWMsRUFBQTtNQUNkO1FBQ0UsdUJBQXFCO1FBQ3JCLFlBQVU7UUFDVixXQUFTO1FBQ1QscUJBQW1CLEVBQUE7TUFFckI7UUkxSUUsa0NBQW9CO1FKNElwQixnQkFBYztRQUNkLGNBQVk7UUFDWixzQ0FBb0M7UUFDcEMsa0NBQWdDO1FBQ2hDLHdCQUFzQjtRQUN0QixtQkFBaUI7UUFDakIsZ0JBQWM7UUFDZCx1QkFBcUI7UUFDckIsbUJBQWlCO1FBQ2pCLDZCQUEyQixFQUFBO1FBQzNCO1VBQ0UsZ0JBQWM7VUFDZCw0QkFBMEIsRUFBQTtRQUU1QjtVQUNFLG1DQUFpQztVQUNqQyx1QkFBcUI7VUFDckIsZ0JBQWM7VUFDZCxtQkFBaUI7VUFDakIsc0JBQW9CLEVBQUE7O0FBVTlCO0VBQ0UsZ0JBQWM7RUFDZCxhQUFXLEVBQUE7RUFDWDtJQUNFLG9CQUFrQixFQUFBO0VBRXBCO0lBQ0UsaUJBQWUsRUFBQTs7QUFJbkI7RUFDRSxxQkFBbUI7RUFDbkIsdUJBQXFCO0VBQ3JCLGNBQVk7RUFDWixjQUFZLEVBQUE7O0FBR2Q7RUFDRSxhQUFXO0VBQ1gsY0FBWTtFQUNaLHVCQUFxQixFQUFBOztBQUd2QjtFQUNFLG9CQUFrQjtFQUNsQixhQUFXO0VBQ1gsWUFBVTtFQUNWLGdCQUFjO0VBQ2QsYUFBVztFQUNYLGNBQVk7RUFDWixvQkFBa0I7RUFDbEIscUJBQW1CLEVBQUE7RUFDbkI7SUFDRSxvQkFBa0I7SUFDbEIsVUFBUTtJQUNSLGVBQWE7SUFDYixhQUFXO0lBQ1gsYUFBVztJQUNYLGNBQVksRUFBQTs7QUFJaEI7RUFDRSxvQkFBa0I7RUFDbEIsZ0JBQWM7RUFDZCxhQUFXO0VBQ1gsYUFBVztFQUNYLG1CQUFpQixFQUFBOztBQUluQjtFQUNFLG9CQUFrQjtFQUNsQixnQkFBYztFQUNkLFdBQVM7RUFDVCxhQUFXO0VBQ1gsYUFBVyxFQUFBOztBQUdiO0VBQ0UsZ0JBQWM7RUFDZCxvQkFBa0I7RUFDbEIsZUFBYTtFQUNiLGFBQVc7RUFDWCwrQkFBNkI7RUFDN0IsK0NBQTZDO0VZek83Qyw2TEFKNkU7RVorTzdFLGFBQVc7RUFDWCxtQkFBaUI7RUFLakIsZ0JBQWM7RUFDZCxtQkFBaUIsRUFBQTtFQUxqQjtJQUNFLGlCQUFlO0lBQ2Ysb0JBQWtCLEVBQUE7RUFLcEI7SUFDRSxtQkFBaUI7SUFDakIsb0JBQWtCO0lBQ2xCLGFBQVc7SUFDWCxjQUFZO0lBQ1osZ0JBQWM7SUFDZCxvQkFBa0I7SUFDbEIsc0JBQW9CLEVBQUE7SUFDcEI7TUFDRSxhQUFXLEVBQUE7SUFFYjtNQUNFLHFCQUFtQixFQUFBO0lBRXJCO01BQ0Usc0JBQW9CLEVBQUE7RUFHeEI7SUFDRSxxQkFBbUI7SUFDbkIsb0JBQWtCO0lBQ2xCLGdCQUFjO0lBQ2QsY0FBWTtJQUNaLGNBQVksRUFBQTtFQUlaO0lBQ0UsbUNBQThCO0lBQzlCLGdCQUFjO0lBQ2QsY0FBWSxFQUFBO0VBRWQ7SUl0Ukksa0NBQW9CO0lKd1J0QixnQkFBYztJQUNkLHFCQUErQixFQUFBO0lBQy9CO01BQ0UscUJBQThCLEVBQUE7RUFJbEM7SUFDRSxnQkFBYztJQUNkLHNCQUFvQjtJQUNwQixvQkFBa0IsRUFBQTtJQUVsQjtNQUNFLHNCQUFvQixFQUFBO0lBR3RCO01BQ0UsZ0JBQWM7TUFDZCxnQkFBYztNQUNkLG1CQUFpQjtNQUNqQixlQUFhO01BQ2Isd0JBQXNCO01BQ3RCLGlCQUFlO01BQ2YseUJBQXVCO01BQ3ZCLHVCQUFxQixFQUFBO0VBSXpCO0lBQ0Usb0JBQWtCO0lBQ2xCLGFBQVc7SUFDWCxjQUFZO0lBQ1osYUFBVyxFQUFBIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXG5AaW1wb3J0IHVybChodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6NDAwLDcwMCk7XG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtYWluLCBtZW51LCBuYXYsIHNlY3Rpb24sIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbywgY2FudmFzLCBwcm9ncmVzcywgdmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuYTphY3RpdmUsIGE6aG92ZXIge1xuICBvdXRsaW5lOiAwOyB9XG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IC42N2VtIDA7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDsgfVxuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5jb2RlLCBrYmQsIHByZSwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250OiBpbmhlcml0O1xuICBtYXJnaW46IDA7IH1cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuYnV0dG9uLCBzZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG5idXR0b24sIGh0bWwgaW5wdXRbdHlwZT1idXR0b25dLCBpbnB1dFt0eXBlPXJlc2V0XSwgaW5wdXRbdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG5idXR0b25bZGlzYWJsZWRdLCBodG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIGlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG5pbnB1dFt0eXBlPWNoZWNrYm94XSwgaW5wdXRbdHlwZT1yYWRpb10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbmlucHV0W3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfVxuXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHNpbHZlcjtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogLjM1ZW0gLjYyNWVtIC43NWVtOyB9XG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKiwgKjo6YWZ0ZXIsICo6OmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYnV0dG9uLCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1zLWFwcGVhcmFuY2U6IG5vbmU7XG4gIC1vLWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDc3ZGNhO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIlJvYm90b1wiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogMC43NWVtIDFlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICBidXR0b246aG92ZXIsIGJ1dHRvbjpmb2N1cywgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwicmVzZXRcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06Zm9jdXMsXG4gIGJ1dHRvbjpob3ZlcixcbiAgYnV0dG9uOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmM1OTk5O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIGJ1dHRvbjpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmRpc2FibGVkLFxuICBidXR0b246ZGlzYWJsZWQge1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC41OyB9XG5cbmZpZWxkc2V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgbWFyZ2luOiAwIDAgMC43NWVtO1xuICBwYWRkaW5nOiAxLjVlbTsgfVxuXG5pbnB1dCxcbmxhYmVsLFxuc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiUm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxZW07IH1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjM3NWVtOyB9XG4gIGxhYmVsLnJlcXVpcmVkOjphZnRlciB7XG4gICAgY29udGVudDogXCIqXCI7IH1cbiAgbGFiZWwgYWJiciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPVwiY29sb3JcIl0sIGlucHV0W3R5cGU9XCJkYXRlXCJdLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl0sIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwibW9udGhcIl0sIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSwgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJ0aW1lXCJdLCBpbnB1dFt0eXBlPVwidXJsXCJdLCBpbnB1dFt0eXBlPVwid2Vla1wiXSwgdGV4dGFyZWEsXG5zZWxlY3RbbXVsdGlwbGU9bXVsdGlwbGVdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMDYpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIlJvYm90b1wiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG4gIHBhZGRpbmc6IDAuNWVtO1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3I7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIGlucHV0W3R5cGU9XCJjb2xvclwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImRhdGVcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwiZW1haWxcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJtb250aFwiXTpob3ZlciwgaW5wdXRbdHlwZT1cIm51bWJlclwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwidGVsXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwidGV4dFwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInRpbWVcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJ1cmxcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJ3ZWVrXCJdOmhvdmVyLCB0ZXh0YXJlYTpob3ZlcixcbiAgc2VsZWN0W211bHRpcGxlPW11bHRpcGxlXTpob3ZlcixcbiAgdGV4dGFyZWE6aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogI2M0YzRjNDsgfVxuICBpbnB1dFt0eXBlPVwiY29sb3JcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJkYXRlXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwibW9udGhcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJudW1iZXJcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInRlbFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJ0aW1lXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwidXJsXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwid2Vla1wiXTpmb2N1cywgdGV4dGFyZWE6Zm9jdXMsXG4gIHNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV06Zm9jdXMsXG4gIHRleHRhcmVhOmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICM0NzdkY2E7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4wNiksIDAgMCA1cHggcmdiYSg1NSwgMTEyLCAxOTIsIDAuNyk7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7IH1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtbXMtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW8tYXBwZWFyYW5jZTogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIG1hcmdpbi1yaWdodDogMC4zNzVlbTsgfVxuXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1ZW07XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnNlbGVjdCB7XG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvOyB9XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuZGwge1xuICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07IH1cbiAgZGwgZHQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi10b3A6IDAuNzVlbTsgfVxuICBkbCBkZCB7XG4gICAgbWFyZ2luOiAwOyB9XG5cbnRhYmxlIHtcbiAgLXdlYmtpdC1mb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiLCBcImxpZ2FcIiwgXCJ0bnVtXCI7XG4gIC1tb3otZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiwgXCJsaWdhXCIsIFwidG51bVwiO1xuICAtbXMtZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiwgXCJsaWdhXCIsIFwidG51bVwiO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiLCBcImxpZ2FcIiwgXCJ0bnVtXCI7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIG1hcmdpbjogMC43NWVtIDA7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNiN2I3Yjc7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDAuNzVlbSAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbnRkIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIHBhZGRpbmc6IDAuNzVlbSAwOyB9XG5cbnRyLFxudGQsXG50aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuYm9keSB7XG4gIC13ZWJraXQtZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiwgXCJsaWdhXCIsIFwicG51bVwiO1xuICAtbW96LWZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIsIFwibGlnYVwiLCBcInBudW1cIjtcbiAgLW1zLWZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIsIFwibGlnYVwiLCBcInBudW1cIjtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiwgXCJsaWdhXCIsIFwicG51bVwiO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiUm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIZWx2ZXRpY2FcIiwgXCJSb2JvdG9cIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgbWFyZ2luOiAwIDAgMC43NWVtOyB9XG5cbnAge1xuICBtYXJnaW46IDAgMCAwLjc1ZW07IH1cblxuYSB7XG4gIGNvbG9yOiAjNDc3ZGNhO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMXMgbGluZWFyOyB9XG4gIGE6YWN0aXZlLCBhOmZvY3VzLCBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzJjNTk5OTsgfVxuICBhOmFjdGl2ZSwgYTpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG5ociB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICBib3JkZXItbGVmdDogbm9uZTtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICBib3JkZXItdG9wOiBub25lO1xuICBtYXJnaW46IDEuNWVtIDA7IH1cblxuaW1nLFxucGljdHVyZSB7XG4gIG1hcmdpbjogMDtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbiNtYXBfY2FudmFzIHtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuI21hcF9jYW52YXMgaW1nIHtcbiAgbWF4LXdpZHRoOiBub25lOyB9XG5cbiNtYXBfY2FudmFzIC5jb250ZW50IHtcbiAgcGFkZGluZzogMCAwLjVlbSAxZW0gMC41ZW07IH1cblxuI21hcF9jYW52YXMgLmZpcnN0SGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luOiAwOyB9XG5cbiNtYXBfY2FudmFzICNib2R5Q29udGVudCBwIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbjogMDsgfVxuXG4udGV4dHVyZSB7XG4gIGhlaWdodDogNWVtO1xuICB3aWR0aDogMTAwJTsgfVxuICAudGV4dHVyZSAudGV4dHVyZS1ub3JtYWwge1xuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aG91Z2h0Ym90L3JlZmlsbHMvbWFzdGVyL3NvdXJjZS9pbWFnZXMvdGV4dHVyZXMvZGlhZ29uYWwtbm9pc2UucG5nXCIpLCAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgxODBkZWcsICNlMWYyZjEsICNiYWUwZGUpLCBjZW50ZXIgbm8tcmVwZWF0ICNlMWYyZjEgc2Nyb2xsO1xuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aG91Z2h0Ym90L3JlZmlsbHMvbWFzdGVyL3NvdXJjZS9pbWFnZXMvdGV4dHVyZXMvZGlhZ29uYWwtbm9pc2UucG5nXCIpLCBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZTFmMmYxLCAjYmFlMGRlKSwgY2VudGVyIG5vLXJlcGVhdCAjZTFmMmYxIHNjcm9sbDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDVlbTtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC50ZXh0dXJlIC50ZXh0dXJlLWludmVydGVkIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdGhvdWdodGJvdC9yZWZpbGxzL21hc3Rlci9zb3VyY2UvaW1hZ2VzL3RleHR1cmVzL2ludmVydGVkL2RpYWdvbmFsLW5vaXNlLnBuZ1wiKSwgLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZTFmMmYxLCAjYmFlMGRlKSwgY2VudGVyIG5vLXJlcGVhdCAjZTFmMmYxIHNjcm9sbDtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdGhvdWdodGJvdC9yZWZpbGxzL21hc3Rlci9zb3VyY2UvaW1hZ2VzL3RleHR1cmVzL2ludmVydGVkL2RpYWdvbmFsLW5vaXNlLnBuZ1wiKSwgbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2UxZjJmMSwgI2JhZTBkZSksIGNlbnRlciBuby1yZXBlYXQgI2UxZjJmMSBzY3JvbGw7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaGVpZ2h0OiA1ZW07XG4gICAgd2lkdGg6IDUwJTsgfVxuXG4qIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmOyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDAuOHZ3O1xuICBtaW4taGVpZ2h0OiAxMDAlOyB9XG5cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDAlOyB9XG5cbm1haW4ge1xuICBmbG9hdDogbGVmdDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogdGFibGU7IH1cbiAgbWFpbiAuY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q3ZDdkNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0LCAjZDdkN2Q3IDAlLCAjZmZmIDMlLCAjZmZmIDk3JSwgI2Q3ZDdkNyAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsI2Q3ZDdkNyAwJSwgI2ZmZiAzJSwgI2ZmZiA5NyUsICNkN2Q3ZDcgMTAwJSk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDVyZW0gNXJlbSAwIDVyZW07XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuICAgIG1haW4gLmNvbnRlbnQgcCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgICBtYWluIC5jb250ZW50IGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogMi41cmVtOyB9XG4gICAgbWFpbiAuY29udGVudCBoMiB7XG4gICAgICB3aWR0aDogMzByZW07XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmQ0NjY7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0LCAjZmZkNDY2LCByZ2JhKDI1NSwgMTg0LCAwLCAwKSk7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsI2ZmZDQ2NiwgcmdiYSgyNTUsIDE4NCwgMCwgMCkpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICBwYWRkaW5nOiAwLjJyZW0gMXJlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07IH1cbiAgICBtYWluIC5jb250ZW50IGFzaWRlIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHdpZHRoOiAzNnJlbTtcbiAgICAgIHBhZGRpbmc6IDJyZW07IH1cbiAgICAgIG1haW4gLmNvbnRlbnQgYXNpZGUgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bzsgfVxuICAgICAgbWFpbiAuY29udGVudCBhc2lkZSBwIHtcbiAgICAgICAgcGFkZGluZzogMCAxcmVtO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5oZXJvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGJveC1zaGFkb3c6IDAgMC4ycmVtIDFyZW0gMC41cmVtICMzMzQ7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB6LWluZGV4OiA1OyB9XG5cbi5iYW5uZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLmlzbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDFyZW07XG4gIGJvdHRvbTogMXJlbTtcbiAgd2lkdGg6IDIwcmVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIHotaW5kZXg6IDMwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7IH1cblxuLmJhbm5lcnRleHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNyU7XG4gIHJpZ2h0OiAyJTtcbiAgZm9udC1zaXplOiAzLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBCb2xkO1xuICB0ZXh0LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjUpIDFweCAycHg7XG4gIGNvbG9yOiAjZThlNWUzO1xuICB6LWluZGV4OiAxMDsgfVxuXG4udG9wYmFyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDA7XG4gIGZsb2F0OiByaWdodDtcbiAgd2lkdGg6IDcwJTtcbiAgZGlzcGxheTogdGFibGU7XG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aG91Z2h0Ym90L3JlZmlsbHMvbWFzdGVyL3NvdXJjZS9pbWFnZXMvdGV4dHVyZXMvZmFuY3lfZGVib3NzLnBuZ1wiKSwgLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjMjIyLCAjMTExKSwgY2VudGVyIG5vLXJlcGVhdCAjMjIyIHNjcm9sbDtcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Rob3VnaHRib3QvcmVmaWxscy9tYXN0ZXIvc291cmNlL2ltYWdlcy90ZXh0dXJlcy9mYW5jeV9kZWJvc3MucG5nXCIpLCBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjMjIyLCAjMTExKSwgY2VudGVyIG5vLXJlcGVhdCAjMjIyIHNjcm9sbDtcbiAgY29sb3I6ICNmMmYxZGM7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgcGFkZGluZzogMC41cmVtIDFyZW0gMCAxcmVtO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgYm9yZGVyLXRvcDogMC4zcmVtIHNvbGlkICNmZmI4MDA7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzY0NjQ2NDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM2NDY0NjQ7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCAwIDFyZW07XG4gIGJveC1zaGFkb3c6IGluc2V0IDJweCAtMnB4IDFweCAwIHJnYmEoMjAwLCAyMDAsIDIwMCwgMC42KTsgfVxuICAudG9wYmFyIHAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBsaW5lLWhlaWdodDogMnJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOyB9XG4gIC50b3BiYXIgLmluIHtcbiAgICBtYXJnaW4tbGVmdDogMnJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGU7IH1cbiAgICAudG9wYmFyIC5pbiBhIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgICBsaW5lLWhlaWdodDogMDsgfVxuICAgICAgLnRvcGJhciAuaW4gYSBpbWcge1xuICAgICAgICBoZWlnaHQ6IDIuOHJlbTtcbiAgICAgICAgd2lkdGg6IDIuOHJlbTtcbiAgICAgICAgcGFkZGluZzogMC4xcmVtOyB9XG4gICAgICAudG9wYmFyIC5pbiBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1yYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCAjZmZiODAwIDAlLCAjZmZiODAwIDIwJSwgdHJhbnNwYXJlbnQgOTAlKTtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KCBjaXJjbGUsICNmZmI4MDAgMCUsICNmZmI4MDAgMjAlLCB0cmFuc3BhcmVudCA5MCUpOyB9XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMTJyZW07XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBib3JkZXItYm90dG9tOiAwLjFyZW0gc29saWQgIzIyMjtcbiAgYm94LXNoYWRvdzogMCAwLjJyZW0gMC41cmVtIDAuM3JlbSAjMzMzO1xuICB6LWluZGV4OiAyMDtcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Rob3VnaHRib3QvcmVmaWxscy9tYXN0ZXIvc291cmNlL2ltYWdlcy90ZXh0dXJlcy9kaWFnb25hbC1ub2lzZS5wbmdcIiksIC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzc3NywgIzIyMiksIGNlbnRlciBuby1yZXBlYXQgIzc3NyBzY3JvbGw7XG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aG91Z2h0Ym90L3JlZmlsbHMvbWFzdGVyL3NvdXJjZS9pbWFnZXMvdGV4dHVyZXMvZGlhZ29uYWwtbm9pc2UucG5nXCIpLCBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNzc3LCAjMjIyKSwgY2VudGVyIG5vLXJlcGVhdCAjNzc3IHNjcm9sbDsgfVxuICBoZWFkZXIgLmxvZ28ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAycmVtO1xuICAgIGxlZnQ6IDFyZW07XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaGVpZ2h0OiA3cmVtO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtIDAuNHJlbSAxcmVtO1xuICAgIGJveC1zaXppbmc6IHBhZGRpbmctYm94O1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDsgfVxuICAgIGhlYWRlciAubG9nbzpob3ZlciB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpOyB9XG4gIGhlYWRlciBuYXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgaGVpZ2h0OiA1cmVtOyB9XG4gICAgaGVhZGVyIG5hdiB1bCB7XG4gICAgICBtYXJnaW46IDAgMXJlbTsgfVxuICAgICAgaGVhZGVyIG5hdiB1bCBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgICBoZWFkZXIgbmF2IHVsIGxpIGEge1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuICAgICAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXRvcDogMC43cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgMC4zcmVtIDAuM3JlbTtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgICAgIGNvbG9yOiAjZWVlYmRhO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDAuNXJlbSAwIDFyZW07IH1cbiAgICAgICAgaGVhZGVyIG5hdiB1bCBsaSBhOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogI2ZmZmVlNjtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAgICAgICBoZWFkZXIgbmF2IHVsIGxpIGE6Zm9jdXMge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoNTAsIDUwLCA1MCwgMC4zKTtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICNmZmI4MDA7XG4gICAgICAgICAgY29sb3I6ICNmZmZlZTY7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDJyZW07XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDFyZW07IH1cblxuLnViaWNhY2lvbiB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTsgfVxuICAudWJpY2FjaW9uIGgzLCAudWJpY2FjaW9uIGg0IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgLnViaWNhY2lvbiBoMyB7XG4gICAgZm9udC1zaXplOiAycmVtOyB9XG5cbiNtYXBfY2FudmFzIHtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNTVyZW07XG4gIGZsb2F0OiByaWdodDsgfVxuXG4uaGFsZiB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4uY2Fyb3VzZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsb2F0OiBsZWZ0O1xuICB0b3A6IDEwcmVtO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNnJlbTtcbiAgcGFkZGluZzogMXJlbSAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jYXJvdXNlbCBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogNXJlbTsgfVxuXG4ucHJvZHVjdG9zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiA0NXJlbTsgfVxuXG4uYmlnY2FibGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDIwO1xuICB3aWR0aDogMTAwJTsgfVxuXG5mb290ZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDIwcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXRvcDogMC41cmVtIHNvbGlkICNBQUE7XG4gIGJveC1zaGFkb3c6IDAgMCA1cHggMXB4IHJnYmEoNTAsIDUwLCA1MCwgMC44KTtcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Rob3VnaHRib3QvcmVmaWxscy9tYXN0ZXIvc291cmNlL2ltYWdlcy90ZXh0dXJlcy9kaWFnb25hbC1ub2lzZS5wbmdcIiksIC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzc3NywgIzIyMiksIGNlbnRlciBuby1yZXBlYXQgIzc3NyBzY3JvbGw7XG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aG91Z2h0Ym90L3JlZmlsbHMvbWFzdGVyL3NvdXJjZS9pbWFnZXMvdGV4dHVyZXMvZGlhZ29uYWwtbm9pc2UucG5nXCIpLCBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNzc3LCAjMjIyKSwgY2VudGVyIG5vLXJlcGVhdCAjNzc3IHNjcm9sbDtcbiAgei1pbmRleDogOTk7XG4gIHBhZGRpbmctdG9wOiAzcmVtO1xuICBjb2xvcjogI2ZmZmVlNjtcbiAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgZm9vdGVyIGgyIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIGZvb3RlciAuaW5mb3JtYWNpb24ge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTVyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiAzcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiA1cmVtOyB9XG4gICAgZm9vdGVyIC5pbmZvcm1hY2lvbiBzdHJvbmcge1xuICAgICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICBmb290ZXIgLmluZm9ybWFjaW9uIHA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBwYWRkaW5nLXRvcDogMi4zcmVtOyB9XG4gICAgZm9vdGVyIC5pbmZvcm1hY2lvbiBwOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTsgfVxuICBmb290ZXIgLmZvcm11bGFyaW8ge1xuICAgIHBhZGRpbmctcmlnaHQ6IDNyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogNTVyZW07IH1cbiAgZm9vdGVyIGZvcm0gdGV4dGFyZWEge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoNTAsIDUwLCA1MCwgMC41KTtcbiAgICBjb2xvcjogI2ZmZmVlNjtcbiAgICByZXNpemU6IG5vbmU7IH1cbiAgZm9vdGVyIGZvcm0gYnV0dG9uIHtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogI2NjOTMwMDsgfVxuICAgIGZvb3RlciBmb3JtIGJ1dHRvbjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZTZhNjAwOyB9XG4gIGZvb3RlciBmb3JtIC5maWVsZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIDAgMC41cmVtIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgZm9vdGVyIGZvcm0gLmZpZWxkOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogM3JlbTsgfVxuICAgIGZvb3RlciBmb3JtIC5maWVsZCBpbnB1dCB7XG4gICAgICBjb2xvcjogI0ZGRjlERjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICAgIHBhZGRpbmc6IDAuN3JlbTtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4zcmVtOyB9XG4gIGZvb3RlciBmb3JtIC5maWVsZCBzcGFuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAyLjdyZW07XG4gICAgbGVmdDogMC43cmVtO1xuICAgIHotaW5kZXg6IC0xOyB9XG5cblxuIiwiQGltcG9ydCBcInJlc2V0cy9ub3JtYWxpemVcIjtcbkBpbXBvcnQgXCJib3VyYm9uL2JvdXJib25cIjtcbkBpbXBvcnQgXCJuZWF0L25lYXRcIjtcbkBpbXBvcnQgXCJiYXNlL2Jhc2VcIjtcbkBpbXBvcnQgdXJsKGh0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsNzAwKTtcbkBpbXBvcnQgXCJtYXAvbWFwXCI7XG5AaW1wb3J0IFwidGV4dHVyZXMvdGV4dHVyZXNcIjtcblxuKiB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMC44dnc7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDAlO1xufVxuXG5tYWluIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICAuY29udGVudCB7XG4gICAgQGluY2x1ZGUgbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZDdkN2Q3IDAlLCAjZmZmIDMlLCAjZmZmIDk3JSwgI2Q3ZDdkNyAxMDAlKTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogNXJlbSA1cmVtIDAgNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgIHAge1xuICAgICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIH1cbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICB9XG4gICAgaDIge1xuICAgICAgd2lkdGg6IDMwcmVtO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBAaW5jbHVkZSBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIGxpZ2h0ZW4oI2ZmYjgwMCwgMjAlKSwgdHJhbnNwYXJlbnRpemUoI2ZmYjgwMCwgMSkpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICBwYWRkaW5nOiAwLjJyZW0gMXJlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgfVxuICAgIGFzaWRlIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHdpZHRoOiAzNnJlbTtcbiAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgfVxuICAgICAgcCB7XG4gICAgICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuXG4uaGVybyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsb2F0OiBsZWZ0O1xuICBib3gtc2hhZG93OiAwIDAuMnJlbSAxcmVtIDAuNXJlbSAjMzM0O1xuICBsaW5lLWhlaWdodDogMDtcbiAgei1pbmRleDogNTtcbn1cblxuLmJhbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLmlzbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDFyZW07XG4gIGJvdHRvbTogMXJlbTtcbiAgd2lkdGg6IDIwcmVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIHotaW5kZXg6IDMwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5iYW5uZXJ0ZXh0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDclO1xuICByaWdodDogMiU7XG4gIGZvbnQtc2l6ZTogMy41cmVtO1xuICBmb250LXdlaWdodDogQm9sZDtcbiAgdGV4dC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC41KSAxcHggMnB4O1xuICBjb2xvcjogaHNsYSgyMCwgMTAsIDkwLCAxKTtcbiAgei1pbmRleDogMTA7XG59XG5cbi50b3BiYXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMDtcbiAgZmxvYXQ6IHJpZ2h0O1xuICB3aWR0aDogNzAlO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgQGluY2x1ZGUgdGV4dHVyZSgxODBkZWcsICMyMjIsICMxMTEsIDIyLCAxKTtcbiAgY29sb3I6ICNmMmYxZGM7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgcGFkZGluZzogMC41cmVtIDFyZW0gMCAxcmVtO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgYm9yZGVyLXRvcDogMC4zcmVtIHNvbGlkICNmZmI4MDA7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcmdiYSgxMDAsIDEwMCwgMTAwLCAxKTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTAwLCAxMDAsIDEwMCwgMSk7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCAwIDFyZW07XG4gIGJveC1zaGFkb3c6IGluc2V0IDJweCAtMnB4IDFweCAwIHJnYmEoMjAwLCAyMDAsIDIwMCwgMC42KTtcbiAgcCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGxpbmUtaGVpZ2h0OiAycmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gIH1cbiAgLmluIHtcbiAgICBtYXJnaW4tbGVmdDogMnJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGU7XG4gICAgYSB7XG4gICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgICBpbWcge1xuICAgICAgICBoZWlnaHQ6IDIuOHJlbTtcbiAgICAgICAgd2lkdGg6IDIuOHJlbTtcbiAgICAgICAgcGFkZGluZzogMC4xcmVtO1xuICAgICAgfVxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIEBpbmNsdWRlIHJhZGlhbC1ncmFkaWVudChjaXJjbGUsICNmZmI4MDAgMCUsICNmZmI4MDAgMjAlLCB0cmFuc3BhcmVudCA5MCUpO1xuICAgICAgfVxuICAgIH1cblxuICB9XG59XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMTJyZW07XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBib3JkZXItYm90dG9tOiAwLjFyZW0gc29saWQgIzIyMjtcbiAgYm94LXNoYWRvdzogMCAwLjJyZW0gMC41cmVtIDAuM3JlbSAjMzMzO1xuICB6LWluZGV4OiAyMDtcbiAgQGluY2x1ZGUgdGV4dHVyZSgxODBkZWcsICM3NzcsICMyMjIsIDY3LCAxKTtcblxuICAubG9nbyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDJyZW07XG4gICAgbGVmdDogMXJlbTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDdyZW07XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcGFkZGluZzogMC41cmVtIDFyZW0gMC40cmVtIDFyZW07XG4gICAgYm94LXNpemluZzogcGFkZGluZy1ib3g7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgMC41cyBlYXNlLWluLW91dCk7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZSgxLjA1KSk7XG4gICAgfVxuICB9XG4gIG5hdiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBoZWlnaHQ6IDVyZW07XG4gICAgdWwge1xuICAgICAgbWFyZ2luOiAwIDFyZW07XG4gICAgICBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgfVxuICAgICAgbGkgYSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsIDAuNXMgZWFzZS1pbi1vdXQpO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBib3JkZXItdG9wOiAwLjdyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgMCAwLjNyZW0gMC4zcmVtO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICAgICAgY29sb3I6ICNlZWViZGE7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMC41cmVtIDAgMXJlbTtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICNmZmZlZTY7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIH1cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSg1MCwgNTAsIDUwLCAwLjMpO1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogI2ZmYjgwMDtcbiAgICAgICAgICBjb2xvcjogI2ZmZmVlNjtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMnJlbTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbiAgICAgICAgfVxuXG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxufVxuXG4udWJpY2FjaW9uIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoMywgaDQge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgfVxuICBoMyB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG59XG5cbiNtYXBfY2FudmFzIHtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNTVyZW07XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmhhbGYge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDU1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5jYXJvdXNlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHRvcDogMTByZW07XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2cmVtO1xuICBwYWRkaW5nOiAxcmVtIDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIGltZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgaGVpZ2h0OiA1cmVtO1xuICB9XG59XG5cbi5wcm9kdWN0b3Mge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDQ1cmVtO1xuXG59XG5cbi5iaWdjYWJsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMjA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5mb290ZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDIwcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXRvcDogMC41cmVtIHNvbGlkICNBQUE7XG4gIGJveC1zaGFkb3c6IDAgMCA1cHggMXB4IHJnYmEoNTAsIDUwLCA1MCwgMC44KTtcbiAgQGluY2x1ZGUgdGV4dHVyZSgxODBkZWcsICM3NzcsICMyMjIsIDY3LCAxKTtcbiAgei1pbmRleDogOTk7XG4gIHBhZGRpbmctdG9wOiAzcmVtO1xuICBoMiB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBjb2xvcjogI2ZmZmVlNjtcbiAgZm9udC1zaXplOiAxLjVyZW07XG5cbiAgLmluZm9ybWFjaW9uIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDU1cmVtO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmctbGVmdDogM3JlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNXJlbTtcbiAgICBzdHJvbmcge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIHA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBwYWRkaW5nLXRvcDogMi4zcmVtO1xuICAgIH1cbiAgICBwOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgICB9XG4gIH1cbiAgLmZvcm11bGFyaW8ge1xuICAgIHBhZGRpbmctcmlnaHQ6IDNyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogNTVyZW07XG4gIH1cbiAgZm9ybSB7XG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDUwLDUwLDUwLDAuNSk7XG4gICAgICBjb2xvcjogI2ZmZmVlNjtcbiAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsIDAuNXMgZWFzZS1pbi1vdXQpO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oI2ZmYjgwMCwxMCUpO1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigjZmZiODAwLDUlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZmllbGQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDAgMCAwLjVyZW0gMDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogM3JlbTtcbiAgICAgIH1cblxuICAgICAgaW5wdXQge1xuICAgICAgICBjb2xvcjogI0ZGRjlERjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgICBwYWRkaW5nOiAwLjdyZW07XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjNyZW07XG5cbiAgICAgIH1cbiAgICB9XG4gICAgLmZpZWxkIHNwYW4ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiAyLjdyZW07XG4gICAgICBsZWZ0OiAwLjdyZW07XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG4gIH1cblxufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovaHRtbHtmb250LWZhbWlseTpzYW5zLXNlcmlmOy1tcy10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCV9Ym9keXttYXJnaW46MH1hcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWFpbixtZW51LG5hdixzZWN0aW9uLHN1bW1hcnl7ZGlzcGxheTpibG9ja31hdWRpbyxjYW52YXMscHJvZ3Jlc3MsdmlkZW97ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9YXVkaW86bm90KFtjb250cm9sc10pe2Rpc3BsYXk6bm9uZTtoZWlnaHQ6MH1baGlkZGVuXSx0ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9YXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fWE6YWN0aXZlLGE6aG92ZXJ7b3V0bGluZTowfWFiYnJbdGl0bGVde2JvcmRlci1ib3R0b206MXB4IGRvdHRlZH1iLHN0cm9uZ3tmb250LXdlaWdodDo3MDB9ZGZue2ZvbnQtc3R5bGU6aXRhbGljfWgxe2ZvbnQtc2l6ZToyZW07bWFyZ2luOi42N2VtIDB9bWFya3tiYWNrZ3JvdW5kOiNmZjA7Y29sb3I6IzAwMH1zbWFsbHtmb250LXNpemU6ODAlfXN1YixzdXB7Zm9udC1zaXplOjc1JTtsaW5lLWhlaWdodDowO3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfXN1cHt0b3A6LS41ZW19c3Vie2JvdHRvbTotLjI1ZW19aW1ne2JvcmRlcjowfXN2Zzpub3QoOnJvb3Qpe292ZXJmbG93OmhpZGRlbn1maWd1cmV7bWFyZ2luOjFlbSA0MHB4fWhyey1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94O2hlaWdodDowfXByZXtvdmVyZmxvdzphdXRvfWNvZGUsa2JkLHByZSxzYW1we2ZvbnQtZmFtaWx5Om1vbm9zcGFjZSxtb25vc3BhY2U7Zm9udC1zaXplOjFlbX1idXR0b24saW5wdXQsb3B0Z3JvdXAsc2VsZWN0LHRleHRhcmVhe2NvbG9yOmluaGVyaXQ7Zm9udDppbmhlcml0O21hcmdpbjowfWJ1dHRvbntvdmVyZmxvdzp2aXNpYmxlfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1idXR0b24saHRtbCBpbnB1dFt0eXBlPWJ1dHRvbl0saW5wdXRbdHlwZT1yZXNldF0saW5wdXRbdHlwZT1zdWJtaXRdey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b247Y3Vyc29yOnBvaW50ZXJ9YnV0dG9uW2Rpc2FibGVkXSxodG1sIGlucHV0W2Rpc2FibGVkXXtjdXJzb3I6ZGVmYXVsdH1idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXJ7Ym9yZGVyOjA7cGFkZGluZzowfWlucHV0e2xpbmUtaGVpZ2h0Om5vcm1hbH1pbnB1dFt0eXBlPWNoZWNrYm94XSxpbnB1dFt0eXBlPXJhZGlvXXtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzowfWlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixpbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b257aGVpZ2h0OmF1dG99aW5wdXRbdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94fWlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixpbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9ZmllbGRzZXR7Ym9yZGVyOjFweCBzb2xpZCBzaWx2ZXI7bWFyZ2luOjAgMnB4O3BhZGRpbmc6LjM1ZW0gLjYyNWVtIC43NWVtfWxlZ2VuZHtib3JkZXI6MDtwYWRkaW5nOjB9dGV4dGFyZWF7b3ZlcmZsb3c6YXV0b31vcHRncm91cHtmb250LXdlaWdodDo3MDB9dGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjB9dGQsdGh7cGFkZGluZzowfSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuQGlmICRib3JkZXItYm94LXNpemluZyA9PSB0cnVlIHtcbiAgaHRtbCB7IC8vIGh0dHA6Ly9iaXQubHkvMXFrMnRWUlxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAqIHtcbiAgICAmLFxuICAgICY6OmFmdGVyLFxuICAgICY6OmJlZm9yZSB7XG4gICAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgIH1cbiAgfVxufVxuIiwiI3skYWxsLWJ1dHRvbi1pbnB1dHN9LFxuYnV0dG9uIHtcbiAgQGluY2x1ZGUgYXBwZWFyYW5jZShub25lKTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICRhY3Rpb24tY29sb3I7XG4gIGJvcmRlci1yYWRpdXM6ICRiYXNlLWJvcmRlci1yYWRpdXM7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogMC43NWVtIDFlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGFjdGlvbi1jb2xvciwgMTUlKTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuXG4gICY6ZGlzYWJsZWQge1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBBIG1peGluIGZvciBnZW5lcmF0aW5nIHZlbmRvciBwcmVmaXhlcyBvbiBub24tc3RhbmRhcmRpemVkIHByb3BlcnRpZXMuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHByb3BlcnR5XG4vLy8gICBQcm9wZXJ0eSB0byBwcmVmaXhcbi8vL1xuLy8vIEBwYXJhbSB7Kn0gJHZhbHVlXG4vLy8gICBWYWx1ZSB0byB1c2Vcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJHByZWZpeGVzXG4vLy8gICBQcmVmaXhlcyB0byBkZWZpbmVcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBwcmVmaXhlcihib3JkZXItcmFkaXVzLCAxMHB4LCB3ZWJraXQgbXMgc3BlYyk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcbi8vLyAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgfVxuLy8vXG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci13ZWJraXRcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1vemlsbGFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1pY3Jvc29mdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itb3BlcmFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXNwZWNcblxuQG1peGluIHByZWZpeGVyKCRwcm9wZXJ0eSwgJHZhbHVlLCAkcHJlZml4ZXMpIHtcbiAgQGVhY2ggJHByZWZpeCBpbiAkcHJlZml4ZXMge1xuICAgIEBpZiAkcHJlZml4ID09IHdlYmtpdCB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itd2Via2l0IHtcbiAgICAgICAgLXdlYmtpdC0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbW96IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1tb3ppbGxhIHtcbiAgICAgICAgLW1vei0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbXMge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1pY3Jvc29mdCB7XG4gICAgICAgIC1tcy0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itb3BlcmEge1xuICAgICAgICAtby0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gc3BlYyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itc3BlYyB7XG4gICAgICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgIHtcbiAgICAgIEB3YXJuIFwiVW5yZWNvZ25pemVkIHByZWZpeDogI3skcHJlZml4fVwiO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gZGlzYWJsZS1wcmVmaXgtZm9yLWFsbCgpIHtcbiAgJHByZWZpeC1mb3Itd2Via2l0OiAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1tb3ppbGxhOiAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1pY3Jvc29mdDogZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3Itb3BlcmE6ICAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1zcGVjOiAgICAgIGZhbHNlICFnbG9iYWw7XG59XG4iLCIvLyBUeXBvZ3JhcGh5XG4kYmFzZS1mb250LWZhbWlseTogJGhlbHZldGljYTtcbiRoZWFkaW5nLWZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcblxuLy8gRm9udCBTaXplc1xuJGJhc2UtZm9udC1zaXplOiAxZW07XG5cbi8vIExpbmUgaGVpZ2h0XG4kYmFzZS1saW5lLWhlaWdodDogMS41O1xuJGhlYWRpbmctbGluZS1oZWlnaHQ6IDEuMjtcblxuLy8gT3RoZXIgU2l6ZXNcbiRiYXNlLWJvcmRlci1yYWRpdXM6IDNweDtcbiRiYXNlLXNwYWNpbmc6ICRiYXNlLWxpbmUtaGVpZ2h0ICogMWVtO1xuJHNtYWxsLXNwYWNpbmc6ICRiYXNlLXNwYWNpbmcgLyAyO1xuJGJhc2Utei1pbmRleDogMDtcblxuLy8gQ29sb3JzXG4kYmx1ZTogIzQ3N2RjYTtcbiRkYXJrLWdyYXk6ICMzMzM7XG4kbWVkaXVtLWdyYXk6ICM5OTk7XG4kbGlnaHQtZ3JheTogI2RkZDtcblxuLy8gRm9udCBDb2xvcnNcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4kYmFzZS1mb250LWNvbG9yOiAkZGFyay1ncmF5O1xuJGFjdGlvbi1jb2xvcjogJGJsdWU7XG5cbi8vIEJvcmRlclxuJGJhc2UtYm9yZGVyLWNvbG9yOiAkbGlnaHQtZ3JheTtcbiRiYXNlLWJvcmRlcjogMXB4IHNvbGlkICRiYXNlLWJvcmRlci1jb2xvcjtcblxuLy8gRm9ybXNcbiRmb3JtLWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDNweCByZ2JhKCMwMDAsIDAuMDYpO1xuJGZvcm0tYm94LXNoYWRvdy1mb2N1czogJGZvcm0tYm94LXNoYWRvdywgMCAwIDVweCBhZGp1c3QtY29sb3IoJGFjdGlvbi1jb2xvciwgJGxpZ2h0bmVzczogLTUlLCAkYWxwaGE6IC0wLjMpO1xuIiwiZmllbGRzZXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRiYXNlLWJvcmRlci1jb2xvciwgMTAlKTtcbiAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gIG1hcmdpbjogMCAwICRzbWFsbC1zcGFjaW5nO1xuICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nO1xufVxuXG5pbnB1dCxcbmxhYmVsLFxuc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmcgLyAyO1xuXG4gICYucmVxdWlyZWQ6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIipcIjtcbiAgfVxuXG4gIGFiYnIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuI3skYWxsLXRleHQtaW5wdXRzfSxcbnNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV0sXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYXNlLWJhY2tncm91bmQtY29sb3I7XG4gIGJvcmRlcjogJGJhc2UtYm9yZGVyO1xuICBib3JkZXItcmFkaXVzOiAkYmFzZS1ib3JkZXItcmFkaXVzO1xuICBib3gtc2hhZG93OiAkZm9ybS1ib3gtc2hhZG93O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nIC8gMjtcbiAgcGFkZGluZzogJGJhc2Utc3BhY2luZyAvIDM7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvcjtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgYm9yZGVyLWNvbG9yOiBkYXJrZW4oJGJhc2UtYm9yZGVyLWNvbG9yLCAxMCUpO1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgYm9yZGVyLWNvbG9yOiAkYWN0aW9uLWNvbG9yO1xuICAgIGJveC1zaGFkb3c6ICRmb3JtLWJveC1zaGFkb3ctZm9jdXM7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxufVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7XG59XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICBAaW5jbHVkZSBhcHBlYXJhbmNlKG5vbmUpO1xufVxuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIG1hcmdpbi1yaWdodDogJHNtYWxsLXNwYWNpbmcgLyAyO1xufVxuXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gIHBhZGRpbmctYm90dG9tOiAkc21hbGwtc3BhY2luZztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnNlbGVjdCB7XG4gIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmc7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IGF1dG87XG59XG4iLCJ1bCxcbm9sIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG5cbiAgJiVkZWZhdWx0LXVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gICAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nO1xuICB9XG5cbiAgJiVkZWZhdWx0LW9sIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gICAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nO1xuICB9XG59XG5cbmRsIHtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG5cbiAgZHQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi10b3A6ICRzbWFsbC1zcGFjaW5nO1xuICB9XG5cbiAgZGQge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuIiwidGFibGUge1xuICBAaW5jbHVkZSBmb250LWZlYXR1cmUtc2V0dGluZ3MoXCJrZXJuXCIsIFwibGlnYVwiLCBcInRudW1cIik7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIG1hcmdpbjogJHNtYWxsLXNwYWNpbmcgMDtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGRhcmtlbigkYmFzZS1ib3JkZXItY29sb3IsIDE1JSk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6ICRzbWFsbC1zcGFjaW5nIDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnRkIHtcbiAgYm9yZGVyLWJvdHRvbTogJGJhc2UtYm9yZGVyO1xuICBwYWRkaW5nOiAkc21hbGwtc3BhY2luZyAwO1xufVxuXG50cixcbnRkLFxudGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuIiwiYm9keSB7XG4gIEBpbmNsdWRlIGZvbnQtZmVhdHVyZS1zZXR0aW5ncyhcImtlcm5cIiwgXCJsaWdhXCIsIFwicG51bVwiKTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGNvbG9yOiAkYmFzZS1mb250LWNvbG9yO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICBsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQ7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gIGxpbmUtaGVpZ2h0OiAkaGVhZGluZy1saW5lLWhlaWdodDtcbiAgbWFyZ2luOiAwIDAgJHNtYWxsLXNwYWNpbmc7XG59XG5cbnAge1xuICBtYXJnaW46IDAgMCAkc21hbGwtc3BhY2luZztcbn1cblxuYSB7XG4gIGNvbG9yOiAkYWN0aW9uLWNvbG9yO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMXMgbGluZWFyO1xuXG4gICY6YWN0aXZlLFxuICAmOmZvY3VzLFxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogZGFya2VuKCRhY3Rpb24tY29sb3IsIDE1JSk7XG4gIH1cblxuICAmOmFjdGl2ZSxcbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxufVxuXG5ociB7XG4gIGJvcmRlci1ib3R0b206ICRiYXNlLWJvcmRlcjtcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLXRvcDogbm9uZTtcbiAgbWFyZ2luOiAkYmFzZS1zcGFjaW5nIDA7XG59XG5cbmltZyxcbnBpY3R1cmUge1xuICBtYXJnaW46IDA7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbiIsIiNtYXBfY2FudmFzIHtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNtYXBfY2FudmFzIGltZyB7XG4gIG1heC13aWR0aDogbm9uZTtcbiAgLy8gdG8gcHJldmVudCBVSSBjb250cm9sIGJ1Z1xufVxuXG4jbWFwX2NhbnZhcyAuY29udGVudCB7XG4gIHBhZGRpbmc6IDAgMC41ZW0gMWVtIDAuNWVtO1xufVxuXG4jbWFwX2NhbnZhcyAuZmlyc3RIZWFkaW5nIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG59XG5cbiNtYXBfY2FudmFzICNib2R5Q29udGVudCBwIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbjogMDtcbn0iLCJAbWl4aW4gdGV4dHVyZSgkZ3JhZGllbnQtYW5nbGUsICRiZy1jb2xvci0xLCAkYmctY29sb3ItMiwgJHRleHR1cmUtbnVtYmVyLCAkaW52ZXJ0ZWQpIHsgJHRleHR1cmUtbGlzdDpcblwicGFwZXIucG5nXCIgICAgICAgICAgICAgLy8gRmFicmljIGFuZCBwYXBlclxuXCJyaWNlX3BhcGVyLnBuZ1wiXG5cIm5vaXNlX2xpbmVzLnBuZ1wiXG5cImZhYnJpY19wbGFpZC5wbmdcIlxuXCJmaXJzdF9haWRfa2l0LnBuZ1wiXG5cInRleHR1cmV0YXN0aWNfZ3JheS5wbmdcIlxuXCJsaWxfZmliZXIucG5nXCJcblwidGV4MnJlczUucG5nXCJcblwic2tpbl9zaWRlX3VwLnBuZ1wiXG5cImxpZ2h0X25vaXNlX2RpYWdvbmFsLnBuZ1wiXG5cImNocnVjaC5wbmdcIlxuXCI0NWRlZ3JlZWVfZmFicmljLnBuZ1wiXG5cImJnbm9pc2VfbGcucG5nXCJcblwibGl0dGxlX3BsdXNlcy5wbmdcIlxuXCJzcXVhaXJ5X2xpZ2h0LnBuZ1wiXG5cIndoaXRlX3RleHR1cmUucG5nXCJcblwiYmluZGluZ19saWdodC5wbmdcIlxuXCJkb3VibGVfbGluZWQucG5nXCIgICAgICAvLyBHcmlkLCBtZXNoIGFuZCBzcXVhcmVzXG5cImdyaWQucG5nXCJcblwiYWJzdXJkaWRhZC5wbmdcIlxuXCJncmlkX25vaXNlLnBuZ1wiXG5cImZhbmN5X2RlYm9zcy5wbmdcIlxuXCJncmFwaHkucG5nXCJcblwibm9pc2VfcGF0dGVybl93aXRoX2Nyb3NzbGluZXMucG5nXCJcblwib2xkX21hdGhlbWF0aWNzLnBuZ1wiXG5cInBzX25ldXRyYWwucG5nXCJcblwic3VidGxlX2ZyZWNrbGVzLnBuZ1wiXG5cIndhdmVncmlkLnBuZ1wiXG5cImF6X3N1YnRsZS5wbmdcIlxuXCJ0aW55X2dyaWQucG5nXCJcblwid2F2ZWdyaWQucG5nXCJcblwiZ3JpZG1lLnBuZ1wiXG5cIm5vaXN5X2dyaWQucG5nXCJcblwic3VidGxlbmV0Mi5wbmdcIlxuXCJ3aGl0ZV9jYXJib24ucG5nXCJcblwibGdodG1lc2gucG5nXCJcblwicDUucG5nXCIgICAgICAgICAgICAgICAgIC8vIERvdHNcblwid29ybl9kb3RzLnBuZ1wiXG5cInN1YnRsZV9kb3RzLnBuZ1wiXG5cImJyaWxsYW50LnBuZ1wiXG5cImZhcm1lci5wbmdcIlxuXCJyZXRpbmFfZHVzdC5wbmdcIiAgICAgICAgLy8gTGluZXNcblwicGluc3RyaXBlLnBuZ1wiXG5cImxpbmVfaG9yaXpvbnRhbDEucG5nXCJcblwibGluZV9ob3Jpem9udGFsMi5wbmdcIlxuXCJsaW5lbi5wbmdcIlxuXCJ2aW50YWdlX3NwZWNrbGVzLnBuZ1wiICAgLy8gUGF0aW5hIGFuZCBpcnJlZ3VsYXJcblwic3VidGxlX2dydW5nZS5wbmdcIlxuXCJvbGRfd2FsbC5wbmdcIlxuXCJicnVzaGVkLnBuZ1wiXG5cInN0dWNjby5wbmdcIlxuXCJtb29uaW5nLnBuZ1wiXG5cImh1c2sucG5nXCJcblwiY29uY3JldGVfd2FsbF8yLnBuZ1wiXG5cIm5vaXN5LnBuZ1wiXG5cImNvbmNyZXRlX3dhbGxfMy5wbmdcIlxuXCJzdWJ0bGVfc3VyZmFjZS5wbmdcIlxuXCJkdXN0LnBuZ1wiXG5cImxpZ2h0X2FsdS5wbmdcIlxuXCJjb3JydWdhdGlvbi5wbmdcIlxuXCJraW5kYWplYW4ucG5nXCIgICAgICAgICAgIC8vIERpYWdvbmFsXG5cImxpbmVfZGlhZ29uYWwxLnBuZ1wiXG5cImxpbmVfZGlhZ29uYWwyLnBuZ1wiXG5cImdyb292ZXBhcGVyLnBuZ1wiXG5cImJydXNoZWRfYWx1LnBuZ1wiXG5cInJvdWdoX2RpYWdvbmFsLnBuZ1wiXG5cImRpYWdvbmFsLW5vaXNlLnBuZ1wiXG5cImNyb3NzX3NjcmF0Y2hlcy5wbmdcIlxuXCJzdHJpcGVkX2xlbnMucG5nXCJcblwiZGVidXRfbGlnaHQucG5nXCJcblwiZGlhZ29uYWxfd2F2ZXMucG5nXCIgICAgLy8gU3BlY2lhbFxuXCJob25leV9pbV9zdWJ0bGUucG5nXCJcblwicHdfbWF6ZV93aGl0ZS5wbmdcIlxuXCJzdWJ0bGVfemVicmFfM2QucG5nXCJcblwid2hpdGVfd2F2ZS5wbmdcIlxuXCJjaXJjbGVzLnBuZ1wiXG5cImNyb3NzZXMucG5nXCJcblwiZ3JpbGxlZC5wbmdcIlxuXCJwd19wYXR0ZXJuLnBuZ1wiXG5cInN0cnVja2F4aW9tLnBuZ1wiXG5cInZpY2h5LnBuZ1wiXG5cIndhdmVjdXQucG5nXCJcblwid2hpdGV5LnBuZ1wiXG5cImNyZWFtX3BpeGVscy5wbmdcIlxuXCJncmV5LnBuZ1wiXG5cInNoaW5lZG90dGVkLnBuZ1wiXG5cInN0YWNrZWRfY2lyY2xlcy5wbmdcIlxuXCJub2lzeV9ncmlkX3NpbXBsZS5wbmdcIjtcblxuICBAaWYgKCRpbnZlcnRlZCA9PSAxKSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZCh1cmwoXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdGhvdWdodGJvdC9yZWZpbGxzL21hc3Rlci9zb3VyY2UvaW1hZ2VzL3RleHR1cmVzLyN7bnRoKCR0ZXh0dXJlLWxpc3QsICR0ZXh0dXJlLW51bWJlcil9XCIpLCBsaW5lYXItZ3JhZGllbnQoJGdyYWRpZW50LWFuZ2xlLCAkYmctY29sb3ItMSwgJGJnLWNvbG9yLTIpLCBjZW50ZXIgbm8tcmVwZWF0ICRiZy1jb2xvci0xIHNjcm9sbCk7XG4gIH1cblxuICBAZWxzZSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZCh1cmwoXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdGhvdWdodGJvdC9yZWZpbGxzL21hc3Rlci9zb3VyY2UvaW1hZ2VzL3RleHR1cmVzL2ludmVydGVkLyN7bnRoKCR0ZXh0dXJlLWxpc3QsICR0ZXh0dXJlLW51bWJlcil9XCIpLCBsaW5lYXItZ3JhZGllbnQoJGdyYWRpZW50LWFuZ2xlLCAkYmctY29sb3ItMSwgJGJnLWNvbG9yLTIpLCBjZW50ZXIgbm8tcmVwZWF0ICRiZy1jb2xvci0xIHNjcm9sbCk7XG4gIH1cbn1cblxuLy8gVGhlIG1peGluIGFib3ZlIHNob3VsZCBwcmVmZXJhYmx5IGJlIGluIGEgZmlsZSBvZiBpdHMgb3duLiBCZWxvdyBpcyB0aGUgY29kZSBmb3IgdGhlIG9iamVjdCB0aGF0IGhhcyB0aGUgdGV4dHVyZS5cblxuLnRleHR1cmUge1xuICAkdGV4dHVyZS10b3AtYmFja2dyb3VuZDogbGlnaHRlbigjZGRmMGVmLCAxJSk7XG4gICR0ZXh0dXJlLWJvdHRvbS1iYWNrZ3JvdW5kOiBkYXJrZW4oI2RkZjBlZiwgMTAlKTtcbiAgaGVpZ2h0OiA1ZW07XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC50ZXh0dXJlLW5vcm1hbCB7XG4gICAgLy8gZ3JhZGllbnQgY29sb3IgMSwgZ3JhZGllbnQgY29sb3IgMiwgZ3JhZGllbnQgYW5nbGUsIHRleHR1cmUtbnVtYmVyLCAwPWludmVydGVkIG9yIDE9bm9ybWFsXG4gICAgQGluY2x1ZGUgdGV4dHVyZSgxODBkZWcsICR0ZXh0dXJlLXRvcC1iYWNrZ3JvdW5kLCAkdGV4dHVyZS1ib3R0b20tYmFja2dyb3VuZCwgNjcsIDEpO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGhlaWdodDogNWVtO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cblxuICAudGV4dHVyZS1pbnZlcnRlZCB7XG4gICAgLy8gZ3JhZGllbnQgY29sb3IgMSwgZ3JhZGllbnQgY29sb3IgMiwgZ3JhZGllbnQgYW5nbGUsIHRleHR1cmUtbnVtYmVyLCAwPWludmVydGVkIG9yIDE9bm9ybWFsXG4gICAgQGluY2x1ZGUgdGV4dHVyZSgxODBkZWcsICR0ZXh0dXJlLXRvcC1iYWNrZ3JvdW5kLCAkdGV4dHVyZS1ib3R0b20tYmFja2dyb3VuZCwgNjcsIDApO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGhlaWdodDogNWVtO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn0iLCIvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8vXG4vLyBCYWNrZ3JvdW5kIHByb3BlcnR5IGZvciBhZGRpbmcgbXVsdGlwbGUgYmFja2dyb3VuZHMgdXNpbmcgc2hvcnRoYW5kXG4vLyBub3RhdGlvbi5cbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLy9cblxuQG1peGluIGJhY2tncm91bmQoJGJhY2tncm91bmRzLi4uKSB7XG4gICR3ZWJraXQtYmFja2dyb3VuZHM6ICgpO1xuICAkc3BlYy1iYWNrZ3JvdW5kczogKCk7XG5cbiAgQGVhY2ggJGJhY2tncm91bmQgaW4gJGJhY2tncm91bmRzIHtcbiAgICAkd2Via2l0LWJhY2tncm91bmQ6ICgpO1xuICAgICRzcGVjLWJhY2tncm91bmQ6ICgpO1xuICAgICRiYWNrZ3JvdW5kLXR5cGU6IHR5cGUtb2YoJGJhY2tncm91bmQpO1xuXG4gICAgQGlmICRiYWNrZ3JvdW5kLXR5cGUgPT0gc3RyaW5nIG9yICRiYWNrZ3JvdW5kLXR5cGUgPT0gbGlzdCB7XG4gICAgICAkYmFja2dyb3VuZC1zdHI6IGlmKCRiYWNrZ3JvdW5kLXR5cGUgPT0gbGlzdCwgbnRoKCRiYWNrZ3JvdW5kLCAxKSwgJGJhY2tncm91bmQpO1xuXG4gICAgICAkdXJsLXN0cjogICAgICAgc3RyLXNsaWNlKCRiYWNrZ3JvdW5kLXN0ciwgMCwgMyk7XG4gICAgICAkZ3JhZGllbnQtdHlwZTogc3RyLXNsaWNlKCRiYWNrZ3JvdW5kLXN0ciwgMCwgNik7XG5cbiAgICAgIEBpZiAkdXJsLXN0ciA9PSBcInVybFwiIHtcbiAgICAgICAgJHdlYmtpdC1iYWNrZ3JvdW5kOiAkYmFja2dyb3VuZDtcbiAgICAgICAgJHNwZWMtYmFja2dyb3VuZDogICAkYmFja2dyb3VuZDtcbiAgICAgIH1cblxuICAgICAgQGVsc2UgaWYgJGdyYWRpZW50LXR5cGUgPT0gXCJsaW5lYXJcIiB7XG4gICAgICAgICRncmFkaWVudHM6IF9saW5lYXItZ3JhZGllbnQtcGFyc2VyKFwiI3skYmFja2dyb3VuZH1cIik7XG4gICAgICAgICR3ZWJraXQtYmFja2dyb3VuZDogbWFwLWdldCgkZ3JhZGllbnRzLCB3ZWJraXQtaW1hZ2UpO1xuICAgICAgICAkc3BlYy1iYWNrZ3JvdW5kOiAgIG1hcC1nZXQoJGdyYWRpZW50cywgc3BlYy1pbWFnZSk7XG4gICAgICB9XG5cbiAgICAgIEBlbHNlIGlmICRncmFkaWVudC10eXBlID09IFwicmFkaWFsXCIge1xuICAgICAgICAkZ3JhZGllbnRzOiBfcmFkaWFsLWdyYWRpZW50LXBhcnNlcihcIiN7JGJhY2tncm91bmR9XCIpO1xuICAgICAgICAkd2Via2l0LWJhY2tncm91bmQ6IG1hcC1nZXQoJGdyYWRpZW50cywgd2Via2l0LWltYWdlKTtcbiAgICAgICAgJHNwZWMtYmFja2dyb3VuZDogICBtYXAtZ2V0KCRncmFkaWVudHMsIHNwZWMtaW1hZ2UpO1xuICAgICAgfVxuXG4gICAgICBAZWxzZSB7XG4gICAgICAgICR3ZWJraXQtYmFja2dyb3VuZDogJGJhY2tncm91bmQ7XG4gICAgICAgICRzcGVjLWJhY2tncm91bmQ6ICAgJGJhY2tncm91bmQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQGVsc2Uge1xuICAgICAgJHdlYmtpdC1iYWNrZ3JvdW5kOiAkYmFja2dyb3VuZDtcbiAgICAgICRzcGVjLWJhY2tncm91bmQ6ICAgJGJhY2tncm91bmQ7XG4gICAgfVxuXG4gICAgJHdlYmtpdC1iYWNrZ3JvdW5kczogYXBwZW5kKCR3ZWJraXQtYmFja2dyb3VuZHMsICR3ZWJraXQtYmFja2dyb3VuZCwgY29tbWEpO1xuICAgICRzcGVjLWJhY2tncm91bmRzOiAgIGFwcGVuZCgkc3BlYy1iYWNrZ3JvdW5kcywgICAkc3BlYy1iYWNrZ3JvdW5kLCAgIGNvbW1hKTtcbiAgfVxuXG4gIGJhY2tncm91bmQ6ICR3ZWJraXQtYmFja2dyb3VuZHM7XG4gIGJhY2tncm91bmQ6ICRzcGVjLWJhY2tncm91bmRzO1xufVxuIiwiQG1peGluIGxpbmVhci1ncmFkaWVudCgkcG9zLCAkZzEsICRnMjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJGczOiBudWxsLCAkZzQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICRnNTogbnVsbCwgJGc2OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAkZzc6IG51bGwsICRnODogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJGc5OiBudWxsLCAkZzEwOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAkZmFsbGJhY2s6IG51bGwpIHtcbiAgLy8gRGV0ZWN0IHdoYXQgdHlwZSBvZiB2YWx1ZSBleGlzdHMgaW4gJHBvc1xuICAkcG9zLXR5cGU6IHR5cGUtb2YobnRoKCRwb3MsIDEpKTtcbiAgJHBvcy1zcGVjOiBudWxsO1xuICAkcG9zLWRlZ3JlZTogbnVsbDtcblxuICAvLyBJZiAkcG9zIGlzIG1pc3NpbmcgZnJvbSBtaXhpbiwgcmVhc3NpZ24gdmFycyBhbmQgYWRkIGRlZmF1bHQgcG9zaXRpb25cbiAgQGlmICgkcG9zLXR5cGUgPT0gY29sb3IpIG9yIChudGgoJHBvcywgMSkgPT0gXCJ0cmFuc3BhcmVudFwiKSAge1xuICAgICRnMTA6ICRnOTsgJGc5OiAkZzg7ICRnODogJGc3OyAkZzc6ICRnNjsgJGc2OiAkZzU7XG4gICAgJGc1OiAkZzQ7ICRnNDogJGczOyAkZzM6ICRnMjsgJGcyOiAkZzE7ICRnMTogJHBvcztcbiAgICAkcG9zOiBudWxsO1xuICB9XG5cbiAgQGlmICRwb3Mge1xuICAgICRwb3NpdGlvbnM6IF9saW5lYXItcG9zaXRpb25zLXBhcnNlcigkcG9zKTtcbiAgICAkcG9zLWRlZ3JlZTogbnRoKCRwb3NpdGlvbnMsIDEpO1xuICAgICRwb3Mtc3BlYzogICBudGgoJHBvc2l0aW9ucywgMik7XG4gIH1cblxuICAkZnVsbDogJGcxLCAkZzIsICRnMywgJGc0LCAkZzUsICRnNiwgJGc3LCAkZzgsICRnOSwgJGcxMDtcblxuICAvLyBTZXQgJGcxIGFzIHRoZSBkZWZhdWx0IGZhbGxiYWNrIGNvbG9yXG4gICRmYWxsYmFjay1jb2xvcjogbnRoKCRnMSwgMSk7XG5cbiAgLy8gSWYgJGZhbGxiYWNrIGlzIGEgY29sb3IgdXNlIHRoYXQgY29sb3IgYXMgdGhlIGZhbGxiYWNrIGNvbG9yXG4gIEBpZiAodHlwZS1vZigkZmFsbGJhY2spID09IGNvbG9yKSBvciAoJGZhbGxiYWNrID09IFwidHJhbnNwYXJlbnRcIikge1xuICAgICRmYWxsYmFjay1jb2xvcjogJGZhbGxiYWNrO1xuICB9XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGZhbGxiYWNrLWNvbG9yO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgkcG9zLWRlZ3JlZSAkZnVsbCk7IC8vIFNhZmFyaSA1LjErLCBDaHJvbWVcbiAgYmFja2dyb3VuZC1pbWFnZTogdW5xdW90ZShcImxpbmVhci1ncmFkaWVudCgjeyRwb3Mtc3BlY30jeyRmdWxsfSlcIik7XG59XG4iLCIvLyBSZXF1aXJlcyBTYXNzIDMuMStcbkBtaXhpbiByYWRpYWwtZ3JhZGllbnQoJGcxLCAkZzIsXG4gICAgICAgICAgICAgICAgICAgICAgICRnMzogbnVsbCwgJGc0OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAkZzU6IG51bGwsICRnNjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJGc3OiBudWxsLCAkZzg6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICRnOTogbnVsbCwgJGcxMDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJHBvczogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJHNoYXBlLXNpemU6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICRmYWxsYmFjazogbnVsbCkge1xuXG4gICRkYXRhOiBfcmFkaWFsLWFyZy1wYXJzZXIoJGcxLCAkZzIsICRwb3MsICRzaGFwZS1zaXplKTtcbiAgJGcxOiAgbnRoKCRkYXRhLCAxKTtcbiAgJGcyOiAgbnRoKCRkYXRhLCAyKTtcbiAgJHBvczogbnRoKCRkYXRhLCAzKTtcbiAgJHNoYXBlLXNpemU6IG50aCgkZGF0YSwgNCk7XG5cbiAgJGZ1bGw6ICRnMSwgJGcyLCAkZzMsICRnNCwgJGc1LCAkZzYsICRnNywgJGc4LCAkZzksICRnMTA7XG5cbiAgLy8gU3RyaXAgZGVwcmVjYXRlZCBjb3Zlci9jb250YWluIGZvciBzcGVjXG4gICRzaGFwZS1zaXplLXNwZWM6IF9zaGFwZS1zaXplLXN0cmlwcGVyKCRzaGFwZS1zaXplKTtcblxuICAvLyBTZXQgJGcxIGFzIHRoZSBkZWZhdWx0IGZhbGxiYWNrIGNvbG9yXG4gICRmaXJzdC1jb2xvcjogbnRoKCRmdWxsLCAxKTtcbiAgJGZhbGxiYWNrLWNvbG9yOiBudGgoJGZpcnN0LWNvbG9yLCAxKTtcblxuICBAaWYgKHR5cGUtb2YoJGZhbGxiYWNrKSA9PSBjb2xvcikgb3IgKCRmYWxsYmFjayA9PSBcInRyYW5zcGFyZW50XCIpIHtcbiAgICAkZmFsbGJhY2stY29sb3I6ICRmYWxsYmFjaztcbiAgfVxuXG4gIC8vIEFkZCBDb21tYXMgYW5kIHNwYWNlc1xuICAkc2hhcGUtc2l6ZTogaWYoJHNoYXBlLXNpemUsIFwiI3skc2hhcGUtc2l6ZX0sIFwiLCBudWxsKTtcbiAgJHBvczogICAgICAgIGlmKCRwb3MsIFwiI3skcG9zfSwgXCIsIG51bGwpO1xuICAkcG9zLXNwZWM6ICAgaWYoJHBvcywgXCJhdCAjeyRwb3N9XCIsIG51bGwpO1xuICAkc2hhcGUtc2l6ZS1zcGVjOiBpZigoJHNoYXBlLXNpemUtc3BlYyAhPSBcIiBcIikgYW5kICgkcG9zID09IG51bGwpLCBcIiN7JHNoYXBlLXNpemUtc3BlY30sIFwiLCBcIiN7JHNoYXBlLXNpemUtc3BlY30gXCIpO1xuXG4gIGJhY2tncm91bmQtY29sb3I6ICAkZmFsbGJhY2stY29sb3I7XG4gIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtcmFkaWFsLWdyYWRpZW50KHVucXVvdGUoI3skcG9zfSN7JHNoYXBlLXNpemV9I3skZnVsbH0pKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdW5xdW90ZShcInJhZGlhbC1ncmFkaWVudCgjeyRzaGFwZS1zaXplLXNwZWN9I3skcG9zLXNwZWN9I3skZnVsbH0pXCIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */